class RoidGame {
    field Ship ship;
    field int direction, numMissiles;
    field Array missiles;

    constructor RoidGame new() {
        let ship = Ship.new(240, 110);
        let direction = 0;
        return this;
    }

    method void dispose() {
        do ship.killShip();
        do Memory.deAlloc(this);
        return;
    }

    method void newMissile(int mX, int mY, Array missiles_) {
        let missiles_[(numMissiles*4)] = mX;
        let missiles_[(numMissiles*4)+1] = mY;
        let missiles_[(numMissiles*4)+2] = -2*(ship.getSinTheta());
        let missiles_[(numMissiles*4)+3] = -2*(ship.getCosTheta());
        let numMissiles = numMissiles + 1;
        do Output.printInt(ship.getX());
        do Output.printChar(",");
        do Output.printInt(ship.getY());
        do Output.printChar(",");
        do Output.println();
        return;
    }

    method void moveMissiles(Array missiles_) {
        var int j;
        let j = 0;
            while (j < 197) {
                if (~(missiles_[j] = false)){
                    do Screen.setColor(false);
                    do Screen.drawPixel(missiles_[j], missiles_[j+1]);
                    if (missiles_[j+2] > 0) {let missiles_[j] = missiles_[j] - 1;}//missiles[j+2]);}
                    if (missiles_[j+2] < 0) {let missiles_[j] = missiles_[j] + 1;}//missiles[j+2]);}   
                    if (missiles_[j+3] > 0) {let missiles_[j+1] = missiles_[j+1] + 1;}//(missiles[j+3]);}
                    if (missiles_[j+3] < 0) {let missiles_[j+1] = missiles_[j+1] - 1;}//(missiles[j+3]);}
                }
                do Screen.setColor(true);
                if (missiles_[j+1] = 0) {let missiles_[j+1] = 255;}
                if (missiles_[j+1] > 255) {let missiles_[j+1] = 0;}
                //if (missiles_[j] = 511) {let missiles[j] = 0;}
                if (missiles_[j] > 510) {let missiles_[j] = 1;}
                if (missiles_[j] < 1) {let missiles_[j] = 510;}
                //do Output.printInt(missiles_[j+1]);
                do Screen.drawPixel(missiles_[j], missiles_[j+1]);
                let j = j + 4;
            }
            return;
        }


    method void run() {
        var char key;
        var boolean exit, fired;
        var int i;
        let exit = false;
        let missiles = Array.new(200);
        let i = 0;
        let numMissiles = 0;
        while (i < 200) {
            let missiles[i] = false;
            let i = i + 1;
        }
    
        while (~exit) {
            if (key = 0) {
                let key = Keyboard.keyPressed();
            }
            if (key = 81) {let exit = true; }
            if (key = 32) {do newMissile(ship.getX(), ship.getY(), missiles);}

            if (~(key = 0)) {
                let key = Keyboard.keyPressed();
                if (key = 131) {do ship.speedUp(); }
                if (key = 130) {do ship.rotateLeft(); }
                if (key = 132) {do ship.rotateRight(); }
            }

            do moveMissiles(missiles);
            do ship.flyShip();
            do Sys.wait(60);            
        }
    return;
    }
}
